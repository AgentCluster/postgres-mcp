name: Build & Deploy to Kubernetes

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # --- YENİ MODERN BUILD BÖLÜMÜ ---

    # 1. Multi-platform buildler için QEMU kurulumu
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # 2. Docker Buildx builder'ını kurma
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 3. Docker Hub'a giriş yapma (yeni secret'lar gerektirir)
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # 4. İmaj adını ve etiketini hazırlama
    - name: Prepare Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: avukatcloud/nomika
        tags: |
          # main branch'ine her push'ta 'latest' etiketini oluştur
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          # Her push için kısa commit SHA'sını etiket olarak oluştur
          type=sha,prefix=,suffix=,format=short

    # 5. İmajı build edip push'lama
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        # ✅ BURAYI KENDİ PROJENİZE GÖRE DÜZENLEYİN
        # Eğer Dockerfile bir alt klasördeyse, o klasörün yolunu yazın.
        context: . # Eğer Dockerfile ana dizindeyse '.' olarak bırakın. Örn: ./uyap_doc_fetcher
        platforms: linux/amd64 # İsterseniz linux/arm64 de ekleyebilirsiniz
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=avukatcloud/nomika:buildcache
        cache-to: type=registry,ref=avukatcloud/nomika:buildcache,mode=max

    # --- DEPLOY BÖLÜMÜ (Aynı kalıyor, sadece etiket alımı değişti) ---

    - name: Install kubectl
      run: |
        KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
        curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
        chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Set up Kubeconfig
      run: |
        kubectl config set-cluster k8s \
          --server=https://34.88.197.247:6443 \
          --insecure-skip-tls-verify=true
        kubectl config set-credentials github-deployer --token=${{ secrets.K8S_TOKEN }}
        kubectl config set-context default --cluster=k8s --user=github-deployer --namespace=default
        kubectl config use-context default

    - name: Deploy to Kubernetes with Helm
      run: |
        # Helm'e sadece commit SHA'sını veriyoruz, metadata action bunu üretiyor.
        helm upgrade --install ${{ github.event.repository.name }} ./helm-chart \
          --namespace default \
          --set image.repository=avukatcloud/nomika \
          --set image.tag=${{ steps.meta.outputs.version }}
          --set env.DATABASE_URI=${{ secrets.POSTGRES }}